<rss xmlns:dc="http://purl.org/dc/elements/1.1/" xmlns:content="http://purl.org/rss/1.0/modules/content/" xmlns:atom="http://www.w3.org/2005/Atom" xmlns:media="http://search.yahoo.com/mrss/" version="2.0"><channel><title>BLCV - Bartosz Ludwiczuk Computer Vision</title><description>Computer Vision Blog and Consulting</description><link>http://localhost:2368/</link><image><url>http://localhost:2368/favicon.png</url><title>BLCV - Bartosz Ludwiczuk Computer Vision</title><link>http://localhost:2368/</link></image><generator>Ghost 1.15</generator><lastBuildDate>Thu, 28 Dec 2017 15:28:21 GMT</lastBuildDate><atom:link href="http://localhost:2368/rss/" rel="self" type="application/rss+xml"/><ttl>60</ttl><item><title>Demystifying Face Recognition IV: Face-Aligment</title><description>How does Face Alignment effect the accuracy of Face Recognition algorithm?</description><link>http://localhost:2368/2017/12/28/demystifying-face-recognition-iii-face-preprocessing/</link><guid isPermaLink="false">5a0fe47acf6e101744f5960a</guid><category>face-recogition</category><dc:creator>Bartosz Ludwiczuk</dc:creator><pubDate>Thu, 28 Dec 2017 09:55:00 GMT</pubDate><media:content url="http://localhost:2368/content/images/2017/11/deepface_logo-1.png" medium="image"/><content:encoded>&lt;div class="kg-card-markdown"&gt;&lt;img src="http://localhost:2368/content/images/2017/11/deepface_logo-1.png" alt="Demystifying Face Recognition IV: Face-Aligment"&gt;&lt;p&gt;One of the crucial steps before learning any Machine Learning model is data preprocessing. Most of the time we just center the data and set variance to 1 (as this make the optimalization process easier). In case of Face-Recognition, we need one-more step: Face-Alignment. What is this all about? In brief, we want to facilitate the task for out model by making the position of face constant (most of the time it means that eyes, nose and mouth are roughly at same position for every image). This is a pretty common step for all known Face-Recognition algorithm. Commonly to other posts, we will ask the beginning question:&lt;br&gt;
&lt;strong&gt;Which preprocessing method for Face-Recognition is best?&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;Reading this post you will find:&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;&lt;strong&gt;Which Face-Alignment method is best? Should we even care about it?&lt;/strong&gt;&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;How many pad add around the face before feeding to image?&lt;/strong&gt;&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Which Image transform should we use?&lt;/strong&gt;&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Does quality of Facial Landmark really care?&lt;/strong&gt;&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Does number and position of reference face landmark influence the accuracy?&lt;/strong&gt;&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;It is possible to learn a model for Face-Alignment?&lt;/strong&gt;&lt;/li&gt;
&lt;/ol&gt;
&lt;h2 id="facealignmentmethod"&gt;Face-Alignment method&lt;/h2&gt;
&lt;p&gt;First of all, let's clarify what we need for preprocessing (most of the time):&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;Detected face in image&lt;/li&gt;
&lt;li&gt;Face landmarks&lt;/li&gt;
&lt;li&gt;Reference landmarks points/pose of face&lt;/li&gt;
&lt;li&gt;Chosen type of transformation (ex. Similarity, Affine)&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;Let's assume that we have image with detected face using any provided algorithm (it does not influence the final accuracy of model, it may just make dataset bigger/smaller depending on number of detected faces in image, we use &lt;a href="https://arxiv.org/abs/1604.02878"&gt;MTCNN&lt;/a&gt;). Then, we must decide if we want to make use of 2D alignment (most popular one) or 3D.&lt;/p&gt;
&lt;h3 id="2dalignment"&gt;2D Alignment&lt;/h3&gt;
&lt;p&gt;At first, we will go step-by-step in 2D case. Firstly we need a face landmarks. There are many available algorithm for that task, which may return different number of such points, depending on training data annotations (there are even competiton for this task: &lt;a href="https://pdfs.semanticscholar.org/657a/58a220b1e69d14ef7a88be859d2f8d75e6a1.pdf"&gt;Menpo Benchmark&lt;/a&gt;). The most popular numbers are &lt;code&gt;68&lt;/code&gt; or &lt;code&gt;5&lt;/code&gt;. Why we may want to choose one set of points vs another? I all just depend on our reference points, which are the points of our base face position (so position of eyes,mouth etc.). We will try to make landmarks of each face as close to them as possible. How we can obtain/calculate such reference points? It is good question. We found a three ways of obtaining them:&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;taking already known points, ex. from &lt;a href="https://github.com/wy1iu/sphereface/blob/master/preprocess/code/face_align_demo.m#L22"&gt;SphereFace&lt;/a&gt; paper&lt;/li&gt;
&lt;li&gt;find one base image with frontal face and take points from it&lt;/li&gt;
&lt;li&gt;calculate mean position of each point&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;Having reference points, next step is choosing the padding of of face, where we mean that there can be a tight or loosely crop of face (ex. containing hair, ears). Just look at example images and see that having the same reference point and different value of padding can result in different image. Also, you could have different value of padding in height and width direction (as most of faces are oval)&lt;/p&gt;
&lt;p align="center"&gt;
&lt;img alt="Demystifying Face Recognition IV: Face-Aligment" src="http://localhost:2368/content/images/2017/11/merge_padding.png"&gt;
&lt;/p&gt;
&lt;p&gt;After this step, we have the last one: choosing the way of calculating transformation which will make landmarks from test images the most similar to reference points. Here we have 4 possible ways of doing it:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Euclidean Transformation&lt;/li&gt;
&lt;li&gt;Similarity Transformation&lt;/li&gt;
&lt;li&gt;Affine Transformation&lt;/li&gt;
&lt;li&gt;Projective Transformation&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;The very good lecture about this transformation is from &lt;a href="https://ags.cs.uni-kl.de/fileadmin/inf_ags/3dcv-ws11-12/3DCV_WS11-12_lec04.pdf"&gt;Augmented Vision Lab from University of Kaiserslautern&lt;/a&gt;. Let's also quickly clarify it here.&lt;/p&gt;
&lt;h4 id="euclideantransformation"&gt;Euclidean Transformation&lt;/h4&gt;
&lt;p&gt;It is rigid transformation which preserve distance between each pair of points. The Euclidean transformations include rotations and translations (3DoF).&lt;/p&gt;
&lt;h4 id="similaritytransformation"&gt;Similarity Transformation&lt;/h4&gt;
&lt;p&gt;In contrast to Euclidean, this transformation also include scaling, so it can make images smaller/bigger (so does not preserve distances between points, 4Dof)&lt;/p&gt;
&lt;h4 id="affinetransformation"&gt;Affine Transformation&lt;/h4&gt;
&lt;p&gt;Transformation which preserves points, straight lines and planes. Examples of affine transformations include translation, rotation, scaling, changing aspect ratio and shear mapping (6DoF).&lt;/p&gt;
&lt;h4 id="projectivetransformation"&gt;Projective Transformation&lt;/h4&gt;
&lt;p&gt;It is the most advanced transformation, which in contrast to Affine does not preserve parallelism of lines. In contrast to other transformation, it create vanishing points and horizonts. As we look into transformation matrix we can notice that each parameter is independent (8DoF).&lt;/p&gt;
&lt;p align="center"&gt;
&lt;img alt="Demystifying Face Recognition IV: Face-Aligment" src="http://localhost:2368/content/images/2017/11/transformation.png" height="450" width="450"&gt;
&lt;/p&gt;
&lt;p&gt;What is the visual difference between this transformation? Let's look into images. If we consider just MSE between reference points and projected points, the more degree of freedom we have then projection error is lower. In the other hand, the more degree of freedom we have, the more unnatural images look like. What is the more important, low MSE error or natural looking faces?&lt;/p&gt;
&lt;p align="center"&gt;
&lt;img alt="Demystifying Face Recognition IV: Face-Aligment" src="http://localhost:2368/content/images/2017/11/compare_transform-1.png"&gt;
&lt;/p&gt;    
&lt;h3 id="3dalignment"&gt;3D Alignment&lt;/h3&gt;
&lt;p&gt;So there are the steps for alignment of faces in 2D. 3D case in much less popular, but it was used one of the breakthourgh paper in Face Recognition, &lt;a href="https://research.fb.com/publications/deepface-closing-the-gap-to-human-level-performance-in-face-verification/"&gt;Deep Face&lt;/a&gt;. How the basic pipeline look here? In fact it depend on the algorithm because each of them have different pipeline. We are not the specialist at 3D Alignment as most of case it does not work better that 2D, most of time because of higher level of interpolation (like piecewise-affine transformation). Below images represent different approaches to 3D transformation.&lt;/p&gt;
&lt;p align="center"&gt;
&lt;img alt="Demystifying Face Recognition IV: Face-Aligment" src="http://localhost:2368/content/images/2017/11/deepface.png"&gt;
&lt;/p&gt;
&amp;nbsp
&lt;p align="center"&gt;
&lt;img alt="Demystifying Face Recognition IV: Face-Aligment" src="http://localhost:2368/content/images/2017/11/hasser.png"&gt;
&lt;/p&gt;
&lt;h2 id="experimentbasedon2dalignment"&gt;Experiment based on 2D Alignment&lt;/h2&gt;
&lt;p&gt;&lt;strong&gt;Note&lt;/strong&gt;: Compared to earlier experiments, we would have different the &lt;strong&gt;Baseline&lt;/strong&gt; model, exactly we will replace linear layer after last module with &lt;a href="https://arxiv.org/abs/1406.4729"&gt;Spatial Pooling&lt;/a&gt; (which is invariant to input size, always output the same size of features). We propose such idea because in next experiments we will have different input size (96x112 and 112x112). We could just increase the number of parameters in model but this could cause also increased overfitting then experiments would not be comparable. Worth noting that this model achieve slightly higher results at &lt;code&gt;LFW&lt;/code&gt; but much lower at &lt;code&gt;BLUFR&lt;/code&gt; protocol.&lt;/p&gt;
&lt;p&gt;In first experiment we will compare multiple method of 2D alignment which differ with reference points and padding around the face. All method are open-source and used by Face-Recognition project which can be find at GitHub. Here are the tested methods:&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;Basic: using MTCNN for points and &lt;a href="https://github.com/wy1iu/sphereface/blob/master/preprocess/code/face_align_demo.m"&gt;SphereFace&lt;/a&gt; reference points. Use Similarity transformation.&lt;/li&gt;
&lt;li&gt;Crop: method taken from &lt;a href="https://github.com/davidsandberg/facenet"&gt;Facenet&lt;/a&gt; by David Sandberg, it just crop image with padding&lt;/li&gt;
&lt;li&gt;Dlib: using &lt;a href="http://blog.dlib.net/2017/02/high-quality-face-recognition-with-deep.html"&gt;dlib&lt;/a&gt; method for Face-Aligment (get_face_chips) with 112 image size and 25% of padding (default value). This method use image-pyramid to make downsampling higher quality and 5 points (but different than SphereFace). Use Affine transformation.&lt;/li&gt;
&lt;li&gt;OpenFace-3points:using original &lt;a href="https://github.com/cmusatyalab/openface"&gt;OpenFace&lt;/a&gt; method for Face Alignment, which use 3 point as a reference. Use Affine transformation.&lt;/li&gt;
&lt;/ol&gt;
&lt;p align="center"&gt;
&lt;img alt="Demystifying Face Recognition IV: Face-Aligment" src="http://localhost:2368/content/images/2017/12/compare_ref_points-2.png"&gt;
&lt;/p&gt;
&lt;p align="center"&gt;
&lt;img alt="Demystifying Face Recognition IV: Face-Aligment" src="http://localhost:2368/content/images/2017/11/compare_org-1.png"&gt;
&lt;/p&gt;
&lt;p align="center"&gt;
&lt;iframe width="800" height="250" frameborder="0" scrolling="no" src="https://plot.ly/~melgor89/119.embed"&gt;&lt;/iframe&gt;&lt;/p&gt;
&lt;p&gt;Look like the SpherFace method is best (we think it is one of the reason of high performance of their algorithm). But surprisingly the second one is just raw face-crop without any alignment. It is pretty intriguing that is worth to mention that &lt;a href="https://arxiv.org/abs/1503.03832"&gt;FaceNet&lt;/a&gt; network from Google was also learn using raw images. Also recently there were several paper which claim that face-alignment is even harmful:&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;&lt;a href="http://openaccess.thecvf.com/content_cvpr_2017_workshops/w6/papers/Ferrari_Investigating_Nuisance_Factors_CVPR_2017_paper.pdf"&gt;Investigating Nuisance Factors in Face Recognition with DCNN Representation&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://arxiv.org/abs/1610.04823"&gt;To Frontalize or Not To Frontalize: A Study of Face Pre-Processing Techniques and Their Impact on Recognition&lt;/a&gt;&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;We will look closer this statement, but compared to cited paper we will be comparing best Face-Alignment method vs Raw-Image.&lt;/p&gt;
&lt;p&gt;Continuing the analysis of basic Face-Alignment method, we are not sure why &lt;code&gt;Dlib&lt;/code&gt; method achieved so low results, maybe because of not including the upper part of head? The algorithm proposed in &lt;code&gt;OpenFace&lt;/code&gt; is the weakest, it just contain to less details of face (as of the the creator of &lt;code&gt;OpenFace&lt;/code&gt; code, we are really disappointed about that, in the other hand now we know what was one of the reason of poor performance).&lt;/p&gt;
&lt;p&gt;As we analyse some basic method of Face-Alignment, now let's make more in-depth analysis of each component.&lt;/p&gt;
&lt;h2 id="whichkindofimagetransformationshouldwechoose"&gt;Which kind of Image Transformation should we choose?&lt;/h2&gt;
&lt;p&gt;Let's make a quick experiment of comparing the image transformation. We will exclude the Euclidean transform as without scaling we should have scale invariant reference points and we don't. In this experiment we will be using baseline reference points (from &lt;code&gt;SphereFace&lt;/code&gt; project).&lt;/p&gt;
&lt;p align="center"&gt;
&lt;iframe width="800" height="200" frameborder="0" scrolling="no" src="https://plot.ly/~melgor89/117.embed"&gt;&lt;/iframe&gt;&lt;/p&gt;
&lt;p align="center"&gt;
&lt;img alt="Demystifying Face Recognition IV: Face-Aligment" src="http://localhost:2368/content/images/2017/11/compare_transform-1.png" height="300" width="300"&gt;
&lt;/p&gt;  
&lt;p&gt;Look like that more natural images are better than fitting the reference points better. Even adding changing aspect ratio and shear make error slightly worse.&lt;/p&gt;
&lt;h2 id="doesnumberofreferencepointsmatters"&gt;Does number of reference points matters?&lt;/h2&gt;
&lt;p&gt;As &lt;code&gt;OpenFace&lt;/code&gt; provide 68 reference landmarks, we will use their software to make such test and check if more mean better. Also maybe some location of points are better than other. For testing is we choose following cases:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;3 points: eyes + nose&lt;/li&gt;
&lt;li&gt;3 points: eyes + center of mouth&lt;/li&gt;
&lt;li&gt;7 points: eyes + nose + 2 points from mouth&lt;/li&gt;
&lt;li&gt;68 points: all points detected in face&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;First two are defined at OpenFace. 7 points case was added as more complicated version, our imagination which points should be used (points are similar to references in SphereFace). The last case is just using all points. For each case we use Similarity Transformation.&lt;/p&gt;
&lt;p align="center"&gt;
&lt;img alt="Demystifying Face Recognition IV: Face-Aligment" src="http://localhost:2368/content/images/2017/12/openface-points-1.png" height="400" width="400"&gt;
&lt;/p&gt;  
&lt;p align="center"&gt;
&lt;iframe width="800" height="250" frameborder="0" scrolling="no" src="https://plot.ly/~melgor89/123.embed"&gt;&lt;/iframe&gt;
&lt;/p&gt; 
&lt;p&gt;The results are not surprise for us, but maybe there are for you? So, look like 7 points and 68 points case works best, overall much better than basic setting for OpenFace. Why? Look like when choosing the reference points there should be suitable variety of points location, in the other hand the transformation would be not consistent/incorrect for many faces. Just look at results of &lt;code&gt;openface-3points-lip&lt;/code&gt;, which point have not usual location. In such case the transformation in calculated using only small region of image, what could cause calculating transformation which we are not wanting too. It's also interesting that having 7 or 68 points create similar results, we supposed that 68 should be worse as face-edge points are not always visible what should cause undefined behaviour. But look like Similarity transform works nice with both cases. However, we would choose 7-points case which should generalize better. In summary, the number of reference points may be not as crucial, even 7 (or 5 like in our basic method) works nice. The most important thing is using points which extend over a large face area.&lt;/p&gt;
&lt;h2 id="howaccuracyoffacelandmarklocationaffectthemodel"&gt;How accuracy of face landmark location affect the model?&lt;/h2&gt;
&lt;p&gt;&lt;code&gt;MTCNN&lt;/code&gt; algorithm was developed for Face-Detection and for Face-Landmark detection. As you may known, there also exist specialized method for just landmarks, which achieve higher accuracy. How does the more accurate landmark position affect final model? For this experiemnt we will use one of state-of-the-art models, &lt;a href="https://github.com/MarekKowalski/DeepAlignmentNetwork"&gt;DeepAlignmentNetwork&lt;/a&gt; created by &lt;a href="http://home.elka.pw.edu.pl/~mkowals6/doku.php"&gt;Marek Kowalski&lt;/a&gt;. The idea behind their algorithm is much more complicated than &lt;code&gt;MTCNN&lt;/code&gt;.&lt;/p&gt;
&lt;p align="center"&gt;
&lt;img alt="Demystifying Face Recognition IV: Face-Aligment" src="http://localhost:2368/content/images/2017/12/kowalski.png" height="400" width="400"&gt;
&lt;/p&gt;  
&lt;blockquote&gt;
&lt;p&gt;DAN is a multi-stage convolutional neural network for face alignment, where each stage analyzes the entire face image. This is facilitated thanks to the use of landmark heatmaps and feature images which transfers the information about the landmarks between stages. The use of an entire face image makes DAN very robust, which leads to state of the art accuracy on the most difficult datasets, including 72% reduction of failure rate on the 300W public test set.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;Also &lt;code&gt;DAN&lt;/code&gt; detect 68 points and unfortunately they don't overlap with &lt;code&gt;MTCNN&lt;/code&gt; points. To be able to use same reference points, we estimate the position of needed points (center of eyes, nose and center of month) using other detected points. The final points look good at pictures, but we must be aware of the possibility of a mistake already at the beginning of our experiment. Here are the results.&lt;/p&gt;
&lt;p align="center"&gt;
&lt;iframe width="800" height="150" frameborder="0" scrolling="no" src="https://plot.ly/~melgor89/124.embed"&gt;&lt;/iframe&gt;
&lt;/p&gt; 
&lt;p&gt;Look like the &lt;code&gt;DAN&lt;/code&gt; algorithm does not influence of the final performance of model, the both result look really similar (and difference maybe not statistically significant, we could check it by doing several experiments, not once). Even our estimation of points does not hurt the performance. Maybe we don't need these points at all and using just raw image? Let's discuss it next.&lt;/p&gt;
&lt;h2 id="isreallyfacealignmentworthdoing"&gt;Is really Face-Alignment worth doing?&lt;/h2&gt;
&lt;p&gt;As stated in &lt;a href="http://openaccess.thecvf.com/content_cvpr_2017_workshops/w6/papers/Ferrari_Investigating_Nuisance_Factors_CVPR_2017_paper.pdf"&gt;Investigating Nuisance Factors in Face Recognition with DCNN Representation&lt;/a&gt;, Face Recogniton may not need Face-Aligment at all. In this section I would like to repeat their experiments but using our network architecture and &lt;code&gt;LFW/BLUFR&lt;/code&gt; for testing. The intuition tells us that this situation seems impossible. If it would, why so much effort would was put in to find a good method for Face-Alignment.&lt;br&gt;
Our test will be very similar to presented is paper and  basic alignment method would be presented by &lt;code&gt;SphereFace&lt;/code&gt;. We will be testing different value of bounding-boxes around the face (parameterized by padding), like presented below. The size of input image from cropped faces is always 112x112. For aligned faces the longer side have value 112. Worth noting that mentioned paper used images 224x224.&lt;/p&gt;
&lt;p align="center"&gt;
&lt;img alt="Demystifying Face Recognition IV: Face-Aligment" src="http://localhost:2368/content/images/2017/12/blog3-crop-pad.jpg" height="400" width="400"&gt;
&lt;/p&gt;  
&lt;p&gt;Here are results from both experiments.&lt;/p&gt;
&lt;p align="center"&gt;
&lt;iframe width="800" height="300" frameborder="0" scrolling="no" src="https://plot.ly/~melgor89/121.embed"&gt;&lt;/iframe&gt;
&lt;/p&gt; 
&lt;p align="center"&gt;
&lt;iframe width="800" height="300" frameborder="0" scrolling="no" src="https://plot.ly/~melgor89/120.embed"&gt;&lt;/iframe&gt;
&lt;/p&gt; 
&lt;p&gt;In contrast to cited paper, our experiments show the clear advantage of learning using faces after alignment in contrast to use raw faces. The different is &amp;gt;5%, so we think that Alignment is it worth doing.&lt;br&gt;
Some paper like &lt;a href="https://arxiv.org/abs/1503.03832"&gt;FaceNet&lt;/a&gt; or &lt;a href="http://www.robots.ox.ac.uk/~vgg/publications/2015/Parkhi15/parkhi15.pdf"&gt;VGGFaceNet&lt;/a&gt; claim that when training with just cropped images, it is good idea to just align it for testing. But we are not sure how this image should look like as we do not have any reference points. We tried running &lt;code&gt;SphereFace&lt;/code&gt; and &lt;code&gt;Dlib&lt;/code&gt; alignment with different padding with no success. Our last try was just rotating the face so that eyes would be at one level without making any significant translation. However the results are not better than baseline. So we were not able to confirm that using aligned images for model learned on cropped faces boost the accuracy.&lt;br&gt;
However, for us this is kind of phenomena that cropping is working so well, but why? Our first intuition is that could be treated as Data Augmentation technique, because the faces are rotated relative to the center of the picture with different values. We will add &lt;code&gt;rotation&lt;/code&gt; to our sets of Data Augmentation technique, which will be tested in next post.&lt;/p&gt;
&lt;p&gt;We would like also discuss a additional phenomena: both 3 middle experiments  in their group achieve similar accuracy despite having different padding value. It just only show that network can distinguish between useful (foreground) and superfluous (background) information, what create some kind of attention, nice! Let's make the test by taking the feature map from one of convolutional module and visualize it. Our visualization will be not as nice as others because most of blogs/paper use last layer to show per class attention. We are just want to show the focus of entire  network before making any classification (so in fact where the features which describe the person come from). The displayed value is exactly mean absolute value. Let's hope they would look nice! Many test with different  configuration of padding will be taken. Enough talking, network, show what you have inside! (As you may notice, the more &lt;code&gt;pink&lt;/code&gt; the color is, the higher value of features is)&lt;/p&gt;
&lt;p align="center"&gt;
&lt;img alt="Demystifying Face Recognition IV: Face-Aligment" src="http://localhost:2368/content/images/2017/12/blog3_crop_Attention-1.png" height="600" width="600"&gt;
&lt;/p&gt; 
&lt;p align="center"&gt;
&lt;img alt="Demystifying Face Recognition IV: Face-Aligment" src="http://localhost:2368/content/images/2017/12/blog3_align_attention-1.png" height="600" width="600"&gt;
&lt;/p&gt; 
&lt;p&gt;Above images look intriguing, don't they? Look like some of network have higher values in face-region, other not. Also network learned with aligned faces have overall more &lt;code&gt;pinky&lt;/code&gt; images. But whether it adds anything to interpretation of network? Our answer is clear: besides it is nice, nothing special. As we are visualizing only just intermediate features, this state where network focus their attention. But you must be aware that this values are not normalized, so visualization show only peak values, in fact the attention map could be much bigger. Also why the &lt;code&gt;Attention Map&lt;/code&gt; from some network with very high score doesn't look great? If you want to get better intuition about &lt;code&gt;visualizing the feature maps&lt;/code&gt; we advice lecture from &lt;a href="http://course.fast.ai/"&gt;fast.ai&lt;/a&gt;  part 1: &lt;a href="http://course.fast.ai/lessons/lesson7.html"&gt;7—EXOTIC CNN ARCHITECTURES; RNN FROM SCRATCH&lt;/a&gt;.&lt;/p&gt;
&lt;h2 id="howaboutlettingthenetworktoaligntheimage"&gt;How about letting the network to align the image?&lt;/h2&gt;
&lt;p&gt;As we let the network to learn which features are crucial for Face-Recognition, maybe we also let it to preprocess the images? Sound great, but how come? Just use &lt;a href="https://arxiv.org/abs/1506.02025"&gt;Spatial Transformer Layer&lt;/a&gt;! It enable to apply the image transformation based on features extracted from image, so no need for face landmarks.&lt;/p&gt;
&lt;p align="center"&gt;
&lt;img alt="Demystifying Face Recognition IV: Face-Aligment" src="https://raw.githubusercontent.com/moodstocks/gtsrb.torch/master/resources/spatial-transformer-structure.png" height="600" width="600"&gt;
&lt;/p&gt; 
&lt;p&gt;As presented at above images, it contain:&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;Localication network: used for generating 6 parameters needed for image transformation&lt;/li&gt;
&lt;li&gt;Grid generator: use provided 6 parameters to generate transformation grid&lt;/li&gt;
&lt;li&gt;Sampler: used input image and grid output modified image&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;If you would like to get more intuition about &lt;code&gt;STN&lt;/code&gt;, read a introduction blog about it from &lt;a href="https://kevinzakka.github.io/2017/01/10/stn-part1/"&gt;kevinzakk&lt;/a&gt;, we really recommed it!.&lt;/p&gt;
&lt;p&gt;This approach is not novel at Face-Recognition community, we know 3 papers already use this approach:&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;&lt;a href="https://arxiv.org/abs/1605.07270"&gt;Learning a Metric Embedding for Face Recognition using the Multibatch Method&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://arxiv.org/abs/1701.07174"&gt;Towards End-to-End Face Recognition through Alignment Learning&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://arxiv.org/abs/1703.10818"&gt;End-To-End Face Detection and Recognition&lt;/a&gt;&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;Each of mentioned paper use &lt;code&gt;STN&lt;/code&gt; in different way. The first paper use similarity transform and pretrain the model using landmark annotationthen it is finetuned with recognition part. The second one want to compare different type of transformation (like we did earlier in the post) but using learnable &lt;code&gt;STN&lt;/code&gt;. The last one use &lt;code&gt;STN&lt;/code&gt; also face-detector.&lt;/p&gt;
&lt;p&gt;Our approach would be the most similar to the paper &lt;a href="https://arxiv.org/abs/1701.07174"&gt;Towards End-to-End Face Recognition through Alignment Learning&lt;/a&gt; (despite using &lt;a href="http://ydwen.github.io/papers/WenECCV16.pdf"&gt;CenterLoss&lt;/a&gt;), but we will also try pretraining &lt;code&gt;STN&lt;/code&gt; model.&lt;br&gt;
Out input data is cropped images with some of the paddding with final size &lt;code&gt;150x150&lt;/code&gt;. The network architecture is 3 layer Convolutional with Pooling as a first component (which behave as a downsampler here). The input size to network is &lt;code&gt;112x96&lt;/code&gt; (like in baseline experiment). This is all we need here, let's make experiments!&lt;/p&gt;
&lt;h4 id="pretrainedstn"&gt;Pretrained STN&lt;/h4&gt;
&lt;p&gt;First experiments will just show if &lt;code&gt;STN&lt;/code&gt; are able to learn transformation similar to our &lt;code&gt;baseline&lt;/code&gt; and if we could easily boost accuracy by finetunning it.&lt;/p&gt;
&lt;p align="center"&gt;
&lt;iframe width="800" height="300" frameborder="0" scrolling="no" src="https://plot.ly/~melgor89/122.embed"&gt;&lt;/iframe&gt;
&lt;/p&gt; 
&lt;p&gt;From all &lt;code&gt;pretraining&lt;/code&gt; experiments the best results achieved method, where &lt;code&gt;STN&lt;/code&gt; is pretrained  and then frozen during training connected with the &lt;code&gt;baseline FaceResNet&lt;/code&gt; model. The results as against &lt;code&gt;baseline&lt;/code&gt; are comparable beyond the &lt;code&gt;validation loss&lt;/code&gt;  and &lt;code&gt;validation accuracy&lt;/code&gt;, where STN model archive much higher values. In other cases when &lt;code&gt;STN&lt;/code&gt; model is finetuned or even &lt;code&gt;FaceResNet&lt;/code&gt; is learned from scratch, the results are much lower than the &lt;code&gt;baseline&lt;/code&gt;. Concluding this part, it is not worth to use pretrained &lt;code&gt;STN&lt;/code&gt; model in any configuration as final result in best case are same like the &lt;code&gt;baseline&lt;/code&gt;.&lt;/p&gt;
&lt;h4 id="typesoftransformationinstn"&gt;Types of transformation in STN&lt;/h4&gt;
&lt;p align="center"&gt;
&lt;iframe width="800" height="200" frameborder="0" scrolling="no" src="https://plot.ly/~melgor89/125.embed"&gt;&lt;/iframe&gt;
&lt;/p&gt; 
&lt;p&gt;These experiments were testing basic type of transformation which can be learned using &lt;code&gt;STN&lt;/code&gt;. What are the results? The best method (&lt;code&gt;affine transformation&lt;/code&gt;) does achieve similar performance like the best current method taken from &lt;code&gt;SpherFace&lt;/code&gt; paper. We were really surprised by this results! This indicate that &lt;code&gt;STN&lt;/code&gt; really can learn useful transformation. Let's also look at how this image transformation look like, how different they are compared to &lt;code&gt;baseline&lt;/code&gt;.&lt;/p&gt;
&lt;p align="center"&gt;
&lt;img alt="Demystifying Face Recognition IV: Face-Aligment" src="http://localhost:2368/content/images/2017/12/blog3-trans-stn.jpg" height="300" width="300"&gt;
&lt;/p&gt; 
&lt;p&gt;&lt;code&gt;STN&lt;/code&gt; transformation are similar to each other and different from presented in &lt;code&gt;SphereFace&lt;/code&gt; paper. This indicate that there are many ways of Face-Alignment to get high accuracy of model.&lt;/p&gt;
&lt;h4 id="morestnexperiments"&gt;More STN experiments&lt;/h4&gt;
&lt;p&gt;Intrigued by high performance of &lt;code&gt;STN&lt;/code&gt; we conduct some more experiments. We were adding more parameters  or &lt;code&gt;DropOut&lt;/code&gt; to &lt;code&gt;Localization Network&lt;/code&gt;. Also original &lt;code&gt;baseline FaceResNet&lt;/code&gt; (without &lt;code&gt;AvgPool&lt;/code&gt; model was tested).&lt;/p&gt;
&lt;p align="center"&gt;
&lt;iframe width="800" height="500" frameborder="0" scrolling="no" src="https://plot.ly/~melgor89/126.embed"&gt;&lt;/iframe&gt;
&lt;/p&gt; 
&lt;p&gt;It look like that adding more parameters to model make &lt;code&gt;STN&lt;/code&gt; better in context of &lt;code&gt;Validation Loss&lt;/code&gt;. However &lt;code&gt;LFW&lt;/code&gt; and &lt;code&gt;BLUFR&lt;/code&gt; are going in opposite direction because the results are getting worse. Also the original &lt;code&gt;baseline FaceResNet&lt;/code&gt; model does not get any boost of performance in &lt;code&gt;LFW&lt;/code&gt; and &lt;code&gt;BLUFR&lt;/code&gt; despite having the competitive &lt;code&gt;Validation Loss&lt;/code&gt;.&lt;/p&gt;
&lt;p&gt;In summary, look like &lt;code&gt;STN&lt;/code&gt; can provide very competitive results, especially with data distribution seen during training. Notwithstanding it is not clear why the same improvement is not seen at &lt;code&gt;LFW&lt;/code&gt; and &lt;code&gt;BLUFR&lt;/code&gt; benchmarks (for example models with same &lt;code&gt;Validation Loss&lt;/code&gt; like &lt;code&gt;STN&lt;/code&gt; model get much better results). Our intuition say that it may be caused by overfitting &lt;code&gt;STN&lt;/code&gt; model to some &lt;code&gt;face distribution&lt;/code&gt; then applying same transform for different distribution does not provide as huge boost. If this would be true, when more model regularization method should be used (&lt;a href="https://arxiv.org/abs/1701.07174"&gt;Towards End-to-End Face Recognition through Alignment Learning&lt;/a&gt; use &lt;code&gt;CenterLoss&lt;/code&gt; as a additional regularization, maybe this is a clue for a better performance?).&lt;/p&gt;
&lt;h2 id="3dfacealignment"&gt;3D Face Alignment&lt;/h2&gt;
&lt;p&gt;In the last experiments we would like to conduct experiments with the most advanced technique for Face Alignment, 3D models. However, we were not able to dispel our doubts about the pipeline the state-of-the-art method of 3D face modeling, &lt;a href="https://arxiv.org/abs/1708.07517"&gt;FacePoseNet: Making a Case for Landmark-Free Face Alignment&lt;/a&gt; as we could not get in touch with the authors. Here are the questions:&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;When you where training model, you directly feed 224x224 image to network, right? No tight crop around head?&lt;/li&gt;
&lt;li&gt;How does align image of IJBA look like? Did you render pose at 0 angle? Or maybe just render at detected pose? Or maybe you use 2D warping? I was trying to render images at 0 angle but it does not look great.&lt;/li&gt;
&lt;li&gt;Could you clarify training process, if it look like that:
&lt;ol&gt;
&lt;li&gt;Get training images&lt;/li&gt;
&lt;li&gt;Run algorithm to estimate 6Dof (FacePoseNet or landmark detection)&lt;/li&gt;
&lt;li&gt;Render one of the pose&lt;/li&gt;
&lt;li&gt;Feed new render to Face Recognition model&lt;/li&gt;
&lt;/ol&gt;
&lt;/li&gt;
&lt;li&gt;How this process would look like if there was no Data-Augmentation?&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;However, we run just experiments with different method of 3D modeling, descibed in &lt;a href="https://www.openu.ac.il/home/hassner/projects/frontalize/"&gt;Effective Face Frontalization in Unconstrained Images&lt;/a&gt;. The results does not convince us to make any further efforts in this direction as many of images doesn't work well (especially with rotated faces).&lt;/p&gt;
&lt;p align="center"&gt;
&lt;iframe width="800" height="100" frameborder="0" scrolling="no" src="https://plot.ly/~melgor89/118.embed"&gt;&lt;/iframe&gt;
&lt;/p&gt; 
&lt;h2 id="conclusion"&gt;Conclusion&lt;/h2&gt;
&lt;p&gt;It this post we have analysed a lot of ways of preparing &lt;code&gt;Face&lt;/code&gt; image before using any Deep Learning model. Unfortunately none of method was able to detronize method proposed in &lt;code&gt;SphereFace&lt;/code&gt;. Let's first answer our question asked at the beginning:&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;&lt;strong&gt;Which Face-Alignment method is best? Should we even care about it?&lt;/strong&gt;
&lt;ul&gt;
&lt;li&gt;the best method is proposed by creators of &lt;code&gt;SphereFace&lt;/code&gt; (&lt;a href="https://github.com/wy1iu/sphereface/blob/master/preprocess/code/face_align_demo.m"&gt;code example&lt;/a&gt;)&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;How many pad add around the face before feeding to image?&lt;/strong&gt;
&lt;ul&gt;
&lt;li&gt;in case of &lt;code&gt;SphereFace&lt;/code&gt; method, between 0 and 20&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Which Image transform should we use?&lt;/strong&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;Similarity Transformation&lt;/code&gt; provide best results&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Does quality of Facial Landmark really care?&lt;/strong&gt;
&lt;ul&gt;
&lt;li&gt;when you have only use &lt;code&gt;5&lt;/code&gt; of them, it does not significantly influence the final results&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Does number and position of reference face landmark influence the accuracy?&lt;/strong&gt;
&lt;ul&gt;
&lt;li&gt;choosing the both number and position of reference points is crucial for model accuracy&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;It is possible to learn a model for Face-Alignment?&lt;/strong&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;STN&lt;/code&gt; show that it is possible with results only worse that &lt;code&gt;SphereFace&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;There are also some extra positives sides of experiments as we can now give some recommendation for others researcher:&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;When you are trying to create own &lt;code&gt;Face Alignment&lt;/code&gt; algorithm always make sure that is surpass single image cropping (which is surprisingly hard baseline to beat).&lt;/li&gt;
&lt;li&gt;The position of reference &lt;code&gt;Face Landmark&lt;/code&gt; and amount of &lt;code&gt;padding&lt;/code&gt; around the face is crucial for &lt;code&gt;Face Alignment&lt;/code&gt; task.&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;That is all in this post, we hope that there were interesting experiments for you. Next time we will test a &lt;code&gt;Data Augmentation&lt;/code&gt; technique and their relation to &lt;code&gt;Face Recognition&lt;/code&gt; task.&lt;/p&gt;
&lt;h2 id="references"&gt;References&lt;/h2&gt;
&lt;h3 id="papers"&gt;Papers&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://arxiv.org/pdf/1704.08063.pdf"&gt;SphereFace : Deep Hypersphere Embedding for Face Recognition&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://arxiv.org/abs/1604.02878"&gt;Joint Face Detection and Alignment using Multi-task Cascaded Convolutional Networks&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://pdfs.semanticscholar.org/657a/58a220b1e69d14ef7a88be859d2f8d75e6a1.pdf"&gt;Menpo Benchmark&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://research.fb.com/publications/deepface-closing-the-gap-to-human-level-performance-in-face-verification/"&gt;DeepFace: Closing the Gap to Human-Level Performance in Face Verification&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://arxiv.org/abs/1503.03832"&gt;FaceNet&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://arxiv.org/abs/1406.4729"&gt;Spatial Pooling&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="http://openaccess.thecvf.com/content_cvpr_2017_workshops/w6/papers/Ferrari_Investigating_Nuisance_Factors_CVPR_2017_paper.pdf"&gt;Investigating Nuisance Factors in Face Recognition with DCNN Representation&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://arxiv.org/abs/1610.04823"&gt;To Frontalize or Not To Frontalize: A Study of Face Pre-Processing Techniques and Their Impact on Recognition&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://arxiv.org/abs/1706.01789"&gt;Deep Alignment Network: A convolutional neural network for robust face alignment&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="http://www.robots.ox.ac.uk/~vgg/publications/2015/Parkhi15/parkhi15.pdf"&gt;Deep Face Recognition&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://arxiv.org/abs/1506.02025"&gt;Spatial Transformer Layer&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://arxiv.org/abs/1605.07270"&gt;Learning a Metric Embedding for Face Recognition using the Multibatch Method&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://arxiv.org/abs/1701.07174"&gt;Towards End-to-End Face Recognition through Alignment Learning&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://arxiv.org/abs/1703.10818"&gt;End-To-End Face Detection and Recognition&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://arxiv.org/abs/1708.07517"&gt;FacePoseNet: Making a Case for Landmark-Free Face Alignment&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.openu.ac.il/home/hassner/projects/frontalize/"&gt;Effective Face Frontalization in Unconstrained Images&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id="projectsblogstutorials"&gt;Projects, blogs, tutorials&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://github.com/davidsandberg/facenet"&gt;Facenet&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="http://blog.dlib.net/2017/02/high-quality-face-recognition-with-deep.html"&gt;dlib&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/cmusatyalab/openface"&gt;OpenFace&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="http://course.fast.ai/"&gt;fast.ai&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://kevinzakka.github.io/2017/01/10/stn-part1/"&gt;Deep Learning Paper Implementations: Spatial Transformer Networks - Part I&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://ags.cs.uni-kl.de/fileadmin/inf_ags/3dcv-ws11-12/3DCV_WS11-12_lec04.pdf"&gt;Augmented Vision Lab from University of Kaiserslautern&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;</content:encoded></item><item><title>Demystifying Face Recognition III: Noise</title><description>&lt;div class="kg-card-markdown"&gt;&lt;p&gt;In last years there were introduced many dataset for Face Recognition, named several:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="http://www.cbsr.ia.ac.cn/english/CASIA-WebFace-Database.html"&gt;CASIA-WebFace&lt;/a&gt;: 0.5M of images&lt;/li&gt;
&lt;li&gt;&lt;a href="http://vintage.winklerbros.net/facescrub.html"&gt;FaceScrub&lt;/a&gt;: 0.1M of images&lt;/li&gt;
&lt;li&gt;&lt;a href="http://www.msceleb.org/celeb1m/dataset"&gt;MsCeleb&lt;/a&gt;: 10M of images&lt;/li&gt;
&lt;li&gt;&lt;a href="http://www.umdfaces.io"&gt;UMD&lt;/a&gt;: 0.38M of images&lt;/li&gt;
&lt;li&gt;&lt;a href="http://www.robots.ox.ac.uk/~vgg/data/vgg_face/"&gt;VGG&lt;/a&gt;: 2.6M of images&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;The main difference between them are the number of images and identities. But&lt;/p&gt;&lt;/div&gt;</description><link>http://localhost:2368/2017/11/09/demystifying-face-recognition-iii-noise/</link><guid isPermaLink="false">5a047a1a1eb5111c6fa985dc</guid><category>face-recogition</category><dc:creator>Bartosz Ludwiczuk</dc:creator><pubDate>Thu, 09 Nov 2017 16:15:35 GMT</pubDate><media:content url="http://localhost:2368/content/images/2017/11/logo-1.png" medium="image"/><content:encoded>&lt;div class="kg-card-markdown"&gt;&lt;img src="http://localhost:2368/content/images/2017/11/logo-1.png" alt="Demystifying Face Recognition III: Noise"&gt;&lt;p&gt;In last years there were introduced many dataset for Face Recognition, named several:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="http://www.cbsr.ia.ac.cn/english/CASIA-WebFace-Database.html"&gt;CASIA-WebFace&lt;/a&gt;: 0.5M of images&lt;/li&gt;
&lt;li&gt;&lt;a href="http://vintage.winklerbros.net/facescrub.html"&gt;FaceScrub&lt;/a&gt;: 0.1M of images&lt;/li&gt;
&lt;li&gt;&lt;a href="http://www.msceleb.org/celeb1m/dataset"&gt;MsCeleb&lt;/a&gt;: 10M of images&lt;/li&gt;
&lt;li&gt;&lt;a href="http://www.umdfaces.io"&gt;UMD&lt;/a&gt;: 0.38M of images&lt;/li&gt;
&lt;li&gt;&lt;a href="http://www.robots.ox.ac.uk/~vgg/data/vgg_face/"&gt;VGG&lt;/a&gt;: 2.6M of images&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;The main difference between them are the number of images and identities. But they're also different in sth like &lt;code&gt;signal-to-noise ratio&lt;/code&gt;, where we mean that ratio between correctly labeled images to all collected images. We do not know such value for any provided database, but some researcher provided the clean-list which provided images which was verified to be correct (by human or face-recognition algorithm). For example &lt;strong&gt;CASIA-WebFace&lt;/strong&gt; have 90% of correct images, also &lt;strong&gt;VGG&lt;/strong&gt; have ~90% (supposing that 15% of noisy labels is a real noise). But what does it mean relative to accuracy of Face Recognition model? Does noise really hurt the performance in verification/identification protocol?&lt;/p&gt;
&lt;h2 id="noisydatabase"&gt;Noisy Database&lt;/h2&gt;
&lt;p&gt;First of all, let's make some literature review.&lt;br&gt;
One of the publication which we know about noise in data for Deep Learning is &lt;a href="https://arxiv.org/abs/1511.06789"&gt;The Unreasonable Effectiveness of Noisy Data for Fine-Grained Recognition&lt;/a&gt;. The idea was simple: instead of marking pictures manually use information gathered in Web (metadata and search-engine). This enable to collect many more images than existed in current training dataset of several benchmarks. The results indicate that when training on original images and from web, the final accuracy is always higher (despite the fact, that the data in noisy).&lt;/p&gt;
&lt;p&gt;The first public face-recognition database with significant amount of noise was &lt;a href="http://www.robots.ox.ac.uk/~vgg/publications/2015/Parkhi15/parkhi15.pdf"&gt;VGG&lt;/a&gt;. We will describe their method in more details. They collected 5M images from both Google and Bing Image Search. Then using Machine Learning algorithm with Fisher Vector Faces descriptor, half of images was removed. The last stage was manually filtering, which take 10 days (really hard work), ending with ~1M of images. Additional the images before manually filtering were provided, what end up with 2.6M. In experiments, Oxford team was using both dataset (named full and curated). And the bigger one leads to better results at all of their experiments, although it contain more noisy images than right one. Before jumping to any conclusion, let's take a closer look into manually filtering process by reading the paper:&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;The aim of this final stage is to increase the purity (precision) of the data using human annotations. However, in order to make the annotation task less burdensome and hence avoid high annotation costs, annotators are aided by using automatic ranking once more. This time, however, a multi-way CNN is trained to discriminate between the 2,622 face identities using the AlexNet architecture; then the softmax scores are used to rank images within each identity set by decreasing likelihood of being an inlier. In order to accelerate the work of the annotators, the ranked images of each identity are displayed in blocks of 200 and annotators are asked to validate blocks as a whole. In particular, a block is declared good if approximate purity is greater than 95%.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;So filtering was done using block of images, which were accepted or refused by looking into purity of it. It means that if there is even some noise in block (more than 5%), then block is removed. To sum up, in 1.6M of noisy images there could be even ~1.4 of good labels. The similar situation is at other dataset like &lt;strong&gt;CASIA&lt;/strong&gt; or &lt;strong&gt;MsCeleb&lt;/strong&gt;: we are not sure that noise is really a noise, because most of time manually annotators does not investigate each of image independently. But from both of them researchers provided list of clean images by removing the noise manually (CASIA) or in automatic way (MsCeleb).&lt;/p&gt;
&lt;h2 id="experimentsoncasiawebface"&gt;Experiments on CASIA-WebFace&lt;/h2&gt;
&lt;p&gt;The first test will be based on &lt;strong&gt;UMD&lt;/strong&gt; database (as very clean database) and different version of &lt;strong&gt;CASIA-WebFace&lt;/strong&gt; database:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;full (0.5M of images)&lt;/li&gt;
&lt;li&gt;clean-v1 (0.47M, taken from &lt;a href="https://github.com/happynear/FaceVerification"&gt;Happy-Near page&lt;/a&gt;)&lt;/li&gt;
&lt;li&gt;clean-v2 (0.445M, taken from project &lt;a href="http://zhengyingbin.cc/ActiveAnnotationLearning"&gt;Face Recognition via Active Annotation and Learning&lt;/a&gt;)&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Idea behind using this databases is testing algorithm on very clean database with smaller size (UMD) versus bigger and noisier database with some efforts of cleaning it. It is really worth to clean the dataset, which cost many of hard manual work?&lt;/p&gt;
&lt;p&gt;For training the network, we will be using the same setting like for baseline. Here are results.&lt;/p&gt;
&lt;p align="center"&gt;
&lt;iframe width="620" height="300" frameborder="0" scrolling="no" src="https://plot.ly/~melgor89/108.embed"&gt;&lt;/iframe&gt;
&lt;/p&gt;
&lt;p&gt;There is no clean conclusion from this experiments. First of all, we can see that delivered clean-list for CASIA-WebFace really have lower noise, because network trained using them have lower loss and higher validation accuracy. But this is the main difference, all network achieve similar score at LFW and BLUFR benchmarks. The highest score achieve the cleanest one, &lt;strong&gt;clean-v2&lt;/strong&gt;, but the difference is only ~1%. Maybe if dataset would contain more images, the bigger change would be noticed. &lt;strong&gt;UMD&lt;/strong&gt; database despite of being very clean, achieve the lowest score. From this set of experiment lool like that there is no big advantage of cleaning dataset if we suppose than there is no more than 10% of incorrect labels.&lt;/p&gt;
&lt;h2 id="experimentsonvggdatabase"&gt;Experiments on VGG-Database&lt;/h2&gt;
&lt;p&gt;As the first experiments does not make any clean conclusion, let's use &lt;strong&gt;VGG&lt;/strong&gt; database. As the number of noisy labels in VGG is much bigger, here will be conducted  experiments using different ratio of noisy labels (exactly images labeled as noisy to all images in training set). We hope that it will show how different amount of noisy labels impact the final accuracy (remembering that the noisy labels in case of VGG maybe may have 10-15% of real noise). For coherence of results, in each experiment same validation dataset is used.&lt;/p&gt;
&lt;p align="center"&gt;
&lt;iframe width="750" height="350" frameborder="0" scrolling="no" src="https://plot.ly/~melgor89/112.embed"&gt;&lt;/iframe&gt;
&lt;/p&gt;
&lt;p&gt;The conclusion from above experiment are the same like in original &lt;a href="http://localhost:2368/2017/11/09/demystifying-face-recognition-iii-noise/(http://www.robots.ox.ac.uk/~vgg/publications/2015/Parkhi15/parkhi15.pdf)"&gt;VGGFace&lt;/a&gt; paper: A  large dataset set is more important than a low level of noisy labels. However we do not know a real amount of noise in &lt;strong&gt;VGG&lt;/strong&gt; dataset. Let's check this in control condition. We will be using always the dataset of same size (0.75M of images), but with different % of real noise in labels (so this is the size situation when we have smaller training set + noisy data). We hope that this experiment will enable us to set a range of noise which is not harmful for final model accuracy.&lt;/p&gt;
&lt;p align="center"&gt;
&lt;iframe width="750" height="420" frameborder="0" scrolling="no" src="https://plot.ly/~melgor89/115.embed"&gt;&lt;/iframe&gt;
&lt;/p&gt;
&lt;p&gt;First of all, looks like to get meaningful result, the kFold idea should be used. Using only just one model make model more random (maybe it is connected with % of noise in data?). From current result we can see that having even 15% of noise make just slight lower score than pure one. Based on the VGG paper, it is more than they estimate at their dataset.&lt;/p&gt;
&lt;h2 id="experimentsusingrealnoise"&gt;Experiments using Real Noise&lt;/h2&gt;
&lt;p&gt;We decided to carry out last experiment. Using the cleanest version of CASIA-WebFace we will be injecting real noise to data with much more noise than before. The noise will be formed from images taken from VGG database with random labels. As we would like to have a small amount of noise in base training data, we will use &lt;strong&gt;clean-v2&lt;/strong&gt; list. The idea behind it is making the dataset bigger with just pure noise, how this effect the final accuracy?&lt;/p&gt;
&lt;p align="center"&gt;
&lt;iframe width="750" height="420" frameborder="0" scrolling="no" src="https://plot.ly/~melgor89/114.embed"&gt;&lt;/iframe&gt;
&lt;/p&gt;
&lt;p&gt;Finally, this experiments provide us clear conclusion. The real noise, even in small amout, hurt the final accuracy. Although the model with 10% of noise achieve better score at LFW, the BLUFR protocol show the bigger difference (but both model are comparable). So we can conclude that is nice to have less than 10% of noise. Also strange situation happened with noise ratio of 50%: the network diverge, so we should lower the learning-rate.&lt;/p&gt;
&lt;p&gt;In the other hard, it is really intriguing that having the 80% of noisy labels still network can learn anything useful. The similar result was achieved by researcher in paper &lt;a href="https://arxiv.org/abs/1705.10694"&gt;Deep Learning is Robust to Massive Label Noise&lt;/a&gt;, even that the experiments have 99% of noise. The researcher have very novel conclusions:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Deep neural networks are able to learn from data that has been diluted by an arbitrary amount of noise.&lt;/li&gt;
&lt;li&gt;A sufficiently large training set is more important than a lower level of noise.&lt;/li&gt;
&lt;li&gt;Choosing good hyperparameters can allow conventional neural networks to operate in the regime of very high label noise.&lt;/li&gt;
&lt;/ul&gt;
&lt;blockquote&gt;
&lt;p&gt;For sure Deep Learning is amazing in handling the noisy data, but we cannot agree with second conclusion, already owning ~0.5M of data example. Having 0.4M of images with clean labels is better than any database with larger amount of images but with noise. Other pros of having clean and small database is faster convergence (as there is less training examples). In the other hand, when we are collecting our own dataset it is inevitable to have noisy labels. Our experiments show that data should not have more than 10% of real noise.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h2 id="conclusion"&gt;Conclusion&lt;/h2&gt;
&lt;p&gt;The summary of above experiments are harder than we except. Look like there is no clean conclusion from them because impact of noise depend on many variables (ex. data size, number of identities). We should make many more experiments with controlled environment to really analyse the impact of noisy labels to final accuracy of model.  but Here are our thoughts:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;the training dataset should not have more than 10% of real noise in dataset&lt;/li&gt;
&lt;li&gt;when we are able to gather easily dataset with noise less than 10%, it is worth doing it (maybe even this is better option rather than cleaning the dataset)&lt;/li&gt;
&lt;li&gt;making a dataset bigger by just inputting random images with random labels is not good idea&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Ok, so test another aspect of preparing the dataset for Face-Recognition. The next question which will we ask about pipeline is:&lt;br&gt;
&lt;strong&gt;How the input image should be aligned before feeding it to network?&lt;/strong&gt;&lt;/p&gt;
&lt;h2 id="reference"&gt;Reference&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://arxiv.org/abs/1411.7923"&gt;Learning Face Representation from Scratch”&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="http://vintage.winklerbros.net/Publications/icip2014a.pdf"&gt;A data-driven approach to cleaning large face datasets.&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://arxiv.org/abs/1607.08221"&gt;MS-Celeb-1M: A Dataset and Benchmark for Large-Scale Face Recognition&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://arxiv.org/abs/1611.01484v2"&gt;UMDFaces: An Annotated Face Dataset for Training Deep Networks&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="http://www.robots.ox.ac.uk/~vgg/publications/2015/Parkhi15/parkhi15.pdf"&gt;VGG-Deep Face Recognition&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://arxiv.org/abs/1511.06789"&gt;The Unreasonable Effectiveness of Noisy Data for Fine-Grained Recognition&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://arxiv.org/abs/1705.10694"&gt;Deep Learning is Robust to Massive Label Noise&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="http://zhengyingbin.cc/ActiveAnnotationLearning"&gt;Face Recognition via Active Annotation and Learning&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/happynear/FaceVerification"&gt;Happy-Near page&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;</content:encoded></item><item><title>Demystifying Face Recognition II: Baseline</title><description>&lt;div class="kg-card-markdown"&gt;&lt;h2 id="testofdifferentnetworkarchitectures"&gt;Test of different network architectures&lt;/h2&gt;
&lt;p&gt;According to assumptions, the database is chosen (CASIA-WebFace), input image is preprocessed (112x96, MTCNN), only mirror used as Data Augmentation and for learning the CrossEntropy loss will be used. The last lacking element in the pipeline is network architecture. Last years was really abounded in&lt;/p&gt;&lt;/div&gt;</description><link>http://localhost:2368/2017/11/08/demystifying-face-recognition-ii-baseline/</link><guid isPermaLink="false">5a0357fdd370791075dc45cc</guid><category>face-recogition</category><dc:creator>Bartosz Ludwiczuk</dc:creator><pubDate>Wed, 08 Nov 2017 19:16:59 GMT</pubDate><media:content url="http://localhost:2368/content/images/2017/11/faceresnet.png" medium="image"/><content:encoded>&lt;div class="kg-card-markdown"&gt;&lt;h2 id="testofdifferentnetworkarchitectures"&gt;Test of different network architectures&lt;/h2&gt;
&lt;img src="http://localhost:2368/content/images/2017/11/faceresnet.png" alt="Demystifying Face Recognition II: Baseline"&gt;&lt;p&gt;According to assumptions, the database is chosen (CASIA-WebFace), input image is preprocessed (112x96, MTCNN), only mirror used as Data Augmentation and for learning the CrossEntropy loss will be used. The last lacking element in the pipeline is network architecture. Last years was really abounded in many diverse ideas about creating the architectures like &lt;strong&gt;ResNet&lt;/strong&gt;, &lt;strong&gt;Inception&lt;/strong&gt; or &lt;strong&gt;DenseNet&lt;/strong&gt;. Additional, the community of Face Recognition was also introducing their own architectures like &lt;strong&gt;FaceResNet&lt;/strong&gt;, &lt;strong&gt;SphereNet&lt;/strong&gt;, &lt;strong&gt;LightCNN&lt;/strong&gt; or &lt;strong&gt;FudanNet&lt;/strong&gt;. Currently we will look closer to the later one as we know their performance and low computation requirements.&lt;br&gt;
We will also include some older architectures to see if it is really true then the new ones works much better than architectures from 2014 or earlier, we choose &lt;strong&gt;LeNet&lt;/strong&gt;, &lt;strong&gt;DeepID&lt;/strong&gt;,** DeepID2+** and &lt;strong&gt;CASIA&lt;/strong&gt;.&lt;br&gt;
This is not the final choice of the architecture, we just want to get a reasonable baseline, which will accompany us with all others test. There are so many test, because we want to make sure, that my current pipeline works well and if my implementation match results from papers.&lt;/p&gt;
&lt;h2 id="descriptionofarchitectures"&gt;Description of Architectures&lt;/h2&gt;
&lt;p&gt;&lt;a href="http://yann.lecun.com/exdb/publis/pdf/lecun-01a.pdf"&gt;LeNet&lt;/a&gt; - the most popular convolutional architecture. Input image: 28x24.&lt;br&gt;
​&lt;br&gt;
&lt;a href="http://mmlab.ie.cuhk.edu.hk/pdf/YiSun_CVPR14.pdf"&gt;DeepID&lt;/a&gt; - One of the first specialized networks used for Face Recognition. Comparing to LeNet, it have more filters and final feature comes from merging data from two layers. Input image: 42x36.&lt;br&gt;
​&lt;br&gt;
&lt;a href="https://arxiv.org/abs/1412.1265"&gt;DeepID2+&lt;/a&gt; - Extension of &lt;strong&gt;DeepID&lt;/strong&gt;, have much more number of filters and features size is now 512. Input image:56x48.&lt;br&gt;
​&lt;br&gt;
&lt;a href="https://arxiv.org/abs/1411.7923"&gt;Casia-Net&lt;/a&gt; - Architecture proposed after success of &lt;strong&gt;VGG&lt;/strong&gt; and &lt;strong&gt;GoogLeNet&lt;/strong&gt;. It use concept of kernel 3x3 and Average Pooling.&lt;br&gt;
​&lt;br&gt;
&lt;a href="https://arxiv.org/abs/1511.02683"&gt;Light-CNN&lt;/a&gt;- The author propose to use &lt;code&gt;MFM&lt;/code&gt;as a activation function, which is extension of &lt;code&gt;MaxOut&lt;/code&gt;. In his experiments it is better than &lt;code&gt;ReLU&lt;/code&gt;, &lt;code&gt;ELU&lt;/code&gt; or even &lt;code&gt;PReLU&lt;/code&gt;.&lt;br&gt;
​&lt;br&gt;
&lt;a href="https://arxiv.org/abs/1611.08976"&gt;FaceResNet&lt;/a&gt; - Architecture proposed by author of CenterLoss and RangeLoss, which use residual connection, like in ResNet. But it does not use BatchNorm and replaces the &lt;code&gt;Relu&lt;/code&gt; activation functions with the &lt;code&gt;PRELu&lt;/code&gt; functions.&lt;br&gt;
​&lt;br&gt;
&lt;a href="https://arxiv.org/abs/1704.08063"&gt;SphereFace&lt;/a&gt; - New version of &lt;strong&gt;FaceResNet&lt;/strong&gt; which mainly replace each &lt;code&gt;MaxPool&lt;/code&gt; by &lt;code&gt;Convolution&lt;/code&gt; with stride equal to 2.&lt;br&gt;
​&lt;br&gt;
&lt;a href="http://www.yugangjiang.info/publication/icmr17-face.pdf"&gt;Fudan-Arch&lt;/a&gt; -Idea of &lt;strong&gt;FaceResNet&lt;/strong&gt; but with &lt;code&gt;Batchnorm&lt;/code&gt;.&lt;/p&gt;
&lt;p&gt;Most of the above architecture have also &lt;a href="https://www.cs.toronto.edu/~hinton/absps/JMLRdropout.pdf"&gt;DropOut&lt;/a&gt; inside, other have own regularization method. If we just want to replicate the results as stated at paper, we would still not be able to compare such results to each other because of different settings. This is why we will completely ignore any special regularization method (like &lt;a href="https://ydwen.github.io/papers/WenECCV16.pdf"&gt;CenterLoss&lt;/a&gt;) and here will be two experiments for each architecture: with and without DropOut. This would also help to validate the current implementation with the results from papers.&lt;br&gt;
To evaluate each network we will use its qualitative results (accuracy and loss value) and time-to-score. The model of each architect was chosen based on the model with the lowest validation loss, ie the result of the LFW did not affect the choice of the model, even though the models achieved better results in another epoch.&lt;/p&gt;
&lt;h2 id="results"&gt;Results&lt;/h2&gt;
&lt;p align="center"&gt;&lt;b&gt;CASIA Training and LFW&lt;/b&gt;&lt;/p&gt;
&lt;p align="center"&gt;
&lt;iframe width="840" height="1020" frameborder="0" scrolling="no" src="https://plot.ly/~melgor89/92.embed"&gt;&lt;/iframe&gt;
&lt;/p&gt;
&lt;iframe width="800" height="400" frameborder="0" scrolling="no" src="https://plot.ly/~melgor89/98.embed"&gt;&lt;/iframe&gt;
&lt;iframe width="800" height="400" frameborder="0" scrolling="no" src="https://plot.ly/~melgor89/97.embed"&gt;&lt;/iframe&gt;
&lt;p&gt;First of all, let's look closer to architectures with DropOut. There is not clean winner here, &lt;strong&gt;Fudan-Full&lt;/strong&gt;, &lt;strong&gt;SphereFace64&lt;/strong&gt; and &lt;strong&gt;Light-CNN29&lt;/strong&gt; are overall comparable, but each of them dominate at one of the given benchmark (validation loss, LFW, BLUFR). Very close to them in &lt;strong&gt;FaceResNet&lt;/strong&gt;, which was training much faster. It is very interesting that many network achieve &amp;gt; 97% at LFW, however BLUFR protocols show us the real difference in quality. For example, difference in 0.7% at LFW between &lt;strong&gt;CASIA&lt;/strong&gt; and &lt;strong&gt;SphereFace64&lt;/strong&gt; translate to 16% in BLUFR-FAR 1%.&lt;br&gt;
What about architectures without any regularization? Here the clear winner is &lt;strong&gt;Fudan-Full&lt;/strong&gt;, followed by &lt;strong&gt;SphereFace64&lt;/strong&gt; and &lt;strong&gt;FaceResNet&lt;/strong&gt;. From the intuition, it look like that &lt;code&gt;BatchNorm&lt;/code&gt; at &lt;strong&gt;Fudan-Ful&lt;/strong&gt;l helped at lot as it behaves like a regularizator. From such comparison we can also deduce which architecture is good for testing any new Data Augmentation technique or new loss, because it would show us even small gain. In our case it is &lt;strong&gt;Light-CNN29&lt;/strong&gt; which overfit a lot.&lt;/p&gt;
&lt;p&gt;For detailed analyse we choose best models: &lt;strong&gt;FaceResNet&lt;/strong&gt;, &lt;strong&gt;Light-CNN29&lt;/strong&gt;, &lt;strong&gt;SphereFace64&lt;/strong&gt; and &lt;strong&gt;FudanFull&lt;/strong&gt;.&lt;/p&gt;
&lt;p align="center"&gt;&lt;b&gt;IJB-A&lt;/b&gt;&lt;/p&gt;
&lt;p align="center"&gt;
&lt;iframe width="800" height="260" frameborder="0" scrolling="no" src="https://plot.ly/~melgor89/106.embed"&gt;&lt;/iframe&gt;
 &lt;/p&gt;
&lt;p&gt;Overall here &lt;strong&gt;Light-CNN29&lt;/strong&gt; is the winner, which lose at only Rank-1 benchmark. But &lt;strong&gt;SphereFace64&lt;/strong&gt; is breathing down its neck by being just slightly worse. The results from &lt;strong&gt;FundanFull&lt;/strong&gt; are really bad, not sure what is the reason for that.&lt;/p&gt;
&lt;p align="center"&gt;&lt;b&gt;Mega Face&lt;/b&gt;&lt;/p&gt;
&lt;p align="center"&gt;
&lt;iframe width="500" height="200" frameborder="0" scrolling="no" src="https://plot.ly/~melgor89/104.embed" align="center"&gt;&lt;/iframe&gt;
&lt;/p&gt;
&lt;p&gt;In MageFace, identification protocol is winner by &lt;strong&gt;FudanFull&lt;/strong&gt; while verification protocol is taken by &lt;strong&gt;Light-CNN29&lt;/strong&gt; (where &lt;strong&gt;FudanFull&lt;/strong&gt; is again the weakest)&lt;/p&gt;
&lt;h2 id="baselinemodel"&gt;Baseline Model&lt;/h2&gt;
&lt;p&gt;Summarizing, if we want to choose best architecture among tested, the &lt;strong&gt;Light-CNN29&lt;/strong&gt; would be the best with &lt;strong&gt;Sphere64&lt;/strong&gt; just right behind. &lt;strong&gt;FudanFull&lt;/strong&gt; works nice, but in some scenario its accuracy is too low. This is our podium. Looking closer to the this architectures, the common thing is using residual connection. But they vary at activation function, using &lt;code&gt;Pool&lt;/code&gt; vs &lt;code&gt;Convolution&lt;/code&gt; with stride equal 2 and using &lt;code&gt;BatchNorm&lt;/code&gt;. So maybe they are not best possible architectures? We will leave this question for future tests.&lt;/p&gt;
&lt;p&gt;When we compare the results from current implementation with the results from paper, most of them matched target accuracy. The only exception is &lt;strong&gt;SphereFace&lt;/strong&gt;, which without DropOut overfit, although the original version does not have it.&lt;/p&gt;
&lt;p&gt;When we compare the time needed for getting best results, this is definitely the best place for FaceResNet, which is only slightly weaker than the best model, but it learned almost 3x shorter. This is why &lt;strong&gt;FaceResNet&lt;/strong&gt; is chosen as baseline architecture. He will accompany us throughout the series named &lt;strong&gt;Face Recognition&lt;/strong&gt;. Specifically, both &lt;strong&gt;FaceResNet&lt;/strong&gt; will be used, depending of scenario: when we will be reducing overfiting by new technique, we will use raw architecture, in other case DropOut will be used.&lt;/p&gt;
&lt;h2 id="whatnext"&gt;What next?&lt;/h2&gt;
&lt;p&gt;Looking into the results it look like that getting &lt;strong&gt;~98&lt;/strong&gt;% on LFW using only basic technique for learning is easy. This results would be among the best 3 years ago, but currently it is ~1.5% behind state-of-the-art. In MegaFace in even worse, because our results is &lt;strong&gt;20%&lt;/strong&gt; lower using same dataset.&lt;br&gt;
How we can boost accuracy of our model? A lot of researcher propose their own technique, but will they work in our case? What boost can we gain? We will learn this in the next post, and in the near future we will look at the aspect of noise in the learning data.&lt;/p&gt;
&lt;h2 id="references"&gt;References&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="http://yann.lecun.com/exdb/publis/pdf/lecun-01a.pdf"&gt;Gradient-Based Learning Applied to Document Recognition&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="http://mmlab.ie.cuhk.edu.hk/pdf/YiSun_CVPR14.pdf"&gt;Deep Learning Face Representation from Predicting 10,000 Classes&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://arxiv.org/abs/1412.1265"&gt;Deeply learned face representations are sparse, selective, and robust&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://arxiv.org/abs/1411.7923"&gt;Learning Face Representation from Scratch&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://arxiv.org/abs/1511.02683"&gt;A Light CNN for Deep Face Representation with Noisy Labels&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://ydwen.github.io/papers/WenECCV16.pdf"&gt;A Discriminative Feature Learning Approach for Deep Face Recognition&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://arxiv.org/abs/1611.08976"&gt;Range Loss for Deep Face Recognition with Long-tail&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://arxiv.org/abs/1704.08063"&gt;SphereFace: Deep Hypersphere Embedding for Face Recognition&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="http://www.yugangjiang.info/publication/icmr17-face.pdf"&gt;Multi-task Deep Neural Network for Joint Face Recognition and Facial Aribute Prediction&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.cs.toronto.edu/~hinton/absps/JMLRdropout.pdf"&gt;Dropout: A Simple Way to Prevent Neural Networks from Overfitting&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;</content:encoded></item><item><title>Demystifying Face Recognition I: Introduction</title><description>&lt;div class="kg-card-markdown"&gt;&lt;p&gt;In Web can be find many articles and research paper about Face Recognition (just look at &lt;a href="https://scirate.com/search?utf8=%E2%9C%93&amp;amp;q=Face+recognition"&gt;scirate&lt;/a&gt;) . Most of them introduce or explain some new technique and compare it to baseline, without going into details about choosing elements of pipeline. There also exist some Open-Source, ready to use library for&lt;/p&gt;&lt;/div&gt;</description><link>http://localhost:2368/2017/11/07/demystifying-face-recognition-i-introduction/</link><guid isPermaLink="false">5a02154c9bbba6631c618c5f</guid><category>face-recogition</category><dc:creator>Bartosz Ludwiczuk</dc:creator><pubDate>Tue, 07 Nov 2017 20:20:59 GMT</pubDate><media:content url="http://localhost:2368/content/images/2017/11/Face-Recognition-Pipeline---Page-1--1.png" medium="image"/><content:encoded>&lt;div class="kg-card-markdown"&gt;&lt;img src="http://localhost:2368/content/images/2017/11/Face-Recognition-Pipeline---Page-1--1.png" alt="Demystifying Face Recognition I: Introduction"&gt;&lt;p&gt;In Web can be find many articles and research paper about Face Recognition (just look at &lt;a href="https://scirate.com/search?utf8=%E2%9C%93&amp;amp;q=Face+recognition"&gt;scirate&lt;/a&gt;) . Most of them introduce or explain some new technique and compare it to baseline, without going into details about choosing elements of pipeline. There also exist some Open-Source, ready to use library for Face-Recognition, where some of them achieve state-of-the-art results. Nice examples are &lt;a href="http://cmusatyalab.github.io/openface/"&gt;OpenFace&lt;/a&gt;, &lt;a href="http://blog.dlib.net/2017/02/high-quality-face-recognition-with-deep.html"&gt;DLib&lt;/a&gt; or &lt;a href="https://github.com/davidsandberg/facenet"&gt;FaceNet&lt;/a&gt;. But what if it turns out that the algorithm does not meet our expectations, what are the method to boost it, what helpful method exist? And how to properly investigate the algorithm to get the answer, is the algorithm is certainly better than the previously used? There is not much systematized information about it, just many papers, each with different pipeline.&lt;/p&gt;
&lt;p&gt;In this series of blog-post, we would like to change it by investigating state-of-art technique available until 2017. We will show new method which enable to boost the performance, verify the researcher's proposals under controlled test conditions and answer some questions that may not only bother me (hopefully, it will sth like &lt;code&gt;Myth Buster&lt;/code&gt; for Face Recognition). For last years there were many proposition targeted &lt;strong&gt;Face Recognition&lt;/strong&gt;, which we want to test, like:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;TripletLoss&lt;/li&gt;
&lt;li&gt;CenterLoss&lt;/li&gt;
&lt;li&gt;LargeMarginSoftMax&lt;/li&gt;
&lt;li&gt;L2 normalization&lt;/li&gt;
&lt;li&gt;Cosine-Product vs Inner-Product&lt;/li&gt;
&lt;li&gt;Face Specific Augmentation&lt;/li&gt;
&lt;li&gt;Learning using 3D model&lt;/li&gt;
&lt;li&gt;Multi-Task Loss&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;We hope that such evaluation would be even helpful for other tasks too, like Image Retrieval or One-Shot Classification as these topics are related to Face Recognition really closely. More about idea of this blog-series later, firstly let's look closer into benchmarks of Face Recognition. Thanks to them we can verify if new ideas can really boost the accuracy of overall system.&lt;/p&gt;
&lt;h2 id="leadingtechniquestotestthequalityoffacialrecognitionalgorithms"&gt;Leading techniques to test the quality of facial recognition algorithms&lt;/h2&gt;
&lt;p&gt;Facial recognition has been present in machine learning for a long time, but only since 2008 the progress in quality systems is rapidly increasing. The cause of technology development was primarily the publication of a benchmark named &lt;a href="http://"&gt;LFW&lt;/a&gt; (Labeled Faces in the Wild), which was distinguished primarily by sharing photos taken under uncontrolled conditions. The main test is based on Pair-Matching that is to compare the photos of two people and to judge whether it is the same or another person. Nowadays many methods achieve result close to perfection, ~99.5%. However even such results does not guarantee high performance in other, production condition. This is why the extension of LFW was proposed, named &lt;a href="http://"&gt;BLUFR&lt;/a&gt;. It contains two protocols: verification at fixed FAR (False-Acceptance-Rate) with 50 mln pairs and identification protocol (which is more production-realistic case).&lt;/p&gt;
&lt;p&gt;In 2015 another benchmark was proposes, exactly &lt;a href="http://"&gt;IARPA Janus Benchmark A&lt;/a&gt;. In terms on benchmark protocol, there are the same like in BLUFR, but there are based on &lt;code&gt;template&lt;/code&gt;. Each &lt;code&gt;template&lt;/code&gt; is created based on several The main difference is in image quality and difficulty. Also, in test images are frames extracted from video, which have much lower quality than images from camera. The authors also proposed different idea of testing by creating the &lt;code&gt;template&lt;/code&gt; for each person instead of testing similarity of each image of person independently. The creation of &lt;code&gt;template&lt;/code&gt; lies in the user's gesture, who can choose its own method for feature merging (like min, max or mean of feature).&lt;/p&gt;
&lt;p align="center"&gt;
&lt;img alt="Demystifying Face Recognition I: Introduction" src="http://localhost:2368/content/images/2017/11/janus_template.png"&gt;
&lt;/p&gt;
&lt;p&gt;Additonal, in 2017 the extension of JANUS-A was introduced, &lt;a href="http://"&gt;Janus Benchmark-B Face Dataset&lt;/a&gt;. Despite of increasing number of test images, the new protocols was introduced, which have more test scenario in comparing images and video-frames and also new face clustering protocol.&lt;/p&gt;
&lt;p&gt;The last face benchmark is &lt;a href="http://"&gt;MegaFace&lt;/a&gt;. As name suggest, this is large scale benchmark of Face Recognition (like ImageNet for Image Classification), containing over 1M images (much bigger than LFW and JANUS benchmark). The main idea is having 3 different dataset, distractors as main gallery dataset, &lt;code&gt;FaceScrub&lt;/code&gt; used for testing algorithm in normal condition and &lt;code&gt;FGNet&lt;/code&gt; used for testing algorithm in age-invariant settings. Like other knows benchmarks, it contain two protocols: verification (over 4 bilion pairs) and identification. In case of &lt;strong&gt;Challenge 1&lt;/strong&gt;, the researcher can choose from two variant based on data size set (Small, &amp;lt; 0.5M, Large &amp;gt; 0.5M of images). In &lt;strong&gt;Challenge 2&lt;/strong&gt;, which was introduced in 2016, each of the competitor have the same training database, containing ~5M images. The aim of that idea is testing the network architectures and algorithm, not the training database (like in case of &lt;strong&gt;Challenge 1&lt;/strong&gt; where everyone can use their own database).&lt;/p&gt;
&lt;p&gt;But how the results of benchmark compare to each other, does improvement in one test generalize to others? Very good compilation of results from many benchmark (not ony introduced above) is presented in paper &lt;a href="https://arxiv.org/abs/1511.02683"&gt;A Light CNN for Deep Face Representation with Noisy Labels&lt;/a&gt;. Authors include inter alia: &lt;a href="https://www.cs.tau.ac.il/~wolf/ytfaces/"&gt;YTF&lt;/a&gt;, &lt;a href="http://ieeexplore.ieee.org/document/4587572/"&gt;YTC&lt;/a&gt;, &lt;a href="http://www.cs.cmu.edu/afs/cs/project/PIE/MultiPie/Multi-Pie/Home.html"&gt;Multi-PIE&lt;/a&gt;, &lt;a href="http://bcsiriuschen.github.io/CARC/"&gt;CACD-VS&lt;/a&gt;, &lt;a href="http://www.cbsr.ia.ac.cn/english/NIR-VIS-2.0-Database.html"&gt;CASIA 2.0 NIR-VIS&lt;/a&gt;, &lt;a href="http://ieeexplore.ieee.org/document/6805594/"&gt;Celebrity-1000 &lt;/a&gt;). Analyzing the results, look like the improvement generalize over most of the benchmark. But some of them better show even small improvement of algorithms than others. For example, having better model for about 0.5% in LFW can give boost of even 20% in BLUFR. If we want to see any, even a little improvement in our model, we should choose harder benchmark, even BLUFR.&lt;/p&gt;
&lt;h2 id="modernfacerecognitiontechnique"&gt;Modern Face Recognition Technique&lt;/h2&gt;
&lt;p&gt;The main method for Face Recognition are based on Deep Learning. The researchers are racing in ways to improve quality of system using bigger training sets, new architectures or changing a loss function. At present, the best face recognition technique is &lt;a href="http://vocord.com/"&gt;Vocoord&lt;/a&gt;, the winner of identification protocol in MegaFace and second best based on &lt;a href="https://www.nist.gov/sites/default/files/documents/2017/08/25/frvt_report_2017_08_25.pdf"&gt;NIST&lt;/a&gt;. Unfortunately we do not know any details about getting such high score.&lt;br&gt;
But there are many researcher that unveil details of their method, some of them even get &amp;gt; 99.5% on LFW. Some of them operate on database having ~ 2M images and multiple neural architectures. Others propose changing pipeline (ex. by data preparation) or adding new loss function (ex. CenterLoss). However, most of them show incremental increase of performance using their own pipeline, where each of them have different ways for ex. preprocessing. Such researches are hard to compare and does not bring us closer to achieving even better results in the future because we can not draw concrete conclusions about the learning process, for ex:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;how face should be preprocessed?&lt;/li&gt;
&lt;li&gt;which data augmentation technique helps?&lt;/li&gt;
&lt;li&gt;which additional features in architectures helps?&lt;/li&gt;
&lt;li&gt;which loss function are best?&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;It is because every scientist uses his or her concept of improving the model, which not always aim to achieve best possible results (as it involve interaction with many variables like database or architecture) but to show the rightness of the thesis. This is obviously an understandable approach, because it is a science. However, practitioners would like to know the limits of current technology of Face Recognition by merging multiple ideas from researchers. It is worth to verify certain theses under controlled conditions so that all test algorithms have equal chances. Many private company have such knowledge, but they does not reveal such secrets.&lt;/p&gt;
&lt;p&gt;In order to get acquainted with the current results on the LFW and YTF benchmarks, the table from &lt;a href="https://ydwen.github.io/papers/WenCVPR17.pdf"&gt;SphereFace&lt;/a&gt; is presented. It is interesting to note that the size of the database used for learning and the number of neural networks used are also given.&lt;/p&gt;
&lt;p align="center"&gt;
&lt;img alt="Demystifying Face Recognition I: Introduction" src="http://localhost:2368/content/images/2017/11/sphereface.png"&gt;
&lt;/p&gt;
&lt;p&gt;These are not all available results, but they give us an overall view of the accuracy of the algorithms. Currently the best result on LFW is &lt;strong&gt;99.83%&lt;/strong&gt;, obtained by company named &lt;strong&gt;Glasix&lt;/strong&gt;. They provide following description of method:&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;We followed the Unrestricted, Labeled Outside Data protocol. The ratio of White to Black to Asian is 1:1:1 in the train set, which contains 100,000 individuals and 2 million face images. We spent a week training the networks which contain a improved resnet34 layer and a improved triplet loss layer on a Dual Maxwell-Gtx titan x machine with a four-stage training method.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p align="center"&gt;
&lt;img alt="Demystifying Face Recognition I: Introduction" src="http://vis-www.cs.umass.edu/lfw/lfw_unrestricted_labeled_zm.png"&gt;
&lt;/p&gt;
&lt;p&gt;If you want to see more results from benchmark, look here:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="http://vis-www.cs.umass.edu/lfw/results.html"&gt;LFW&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="http://megaface.cs.washington.edu/results/facescrub.html"&gt;MegaFace&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id="aimofseries"&gt;Aim of series&lt;/h2&gt;
&lt;p&gt;The main aim of the series of post will be creating the full algorithm for Face Recognition, which will be having high results on public benchmarks (using Deep Learning). But the main target will be test on &lt;a href="http://megaface.cs.washington.edu/participate/challenge.html"&gt;MegaFace Challange 1 - Small&lt;/a&gt; and&lt;a href="http://megaface.cs.washington.edu/participate/challenge2.html"&gt; MegaFace Challange 2&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;To achieve very competitive results, here following ideas will be tested:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;preprocessing of data&lt;/li&gt;
&lt;li&gt;data augmentation technique&lt;/li&gt;
&lt;li&gt;loss functions&lt;/li&gt;
&lt;li&gt;optimization algorithm&lt;/li&gt;
&lt;li&gt;choosing the NN architecture&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;So, at the end of the day, we will learn what pipeline to build to maximize model quality in face recognition tasks. We think that this series will be pretty long as every month new paper come out or new ideas are appearing. The beginning of series will be rather checking well known ideas but the farther we go the more research we will see there. We will be also testing some recently released ideas about Face-Recognition.&lt;br&gt;
In order to be able to draw conclusions from experiments, limitations and initial assumptions will be made to facilitate the analysis of the results.&lt;/p&gt;
&lt;p&gt;Limitations:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;algorithms will be working at &lt;a href="http://www.cbsr.ia.ac.cn/english/CASIA-WebFace-Database.html"&gt;CASIA-WebFace&lt;/a&gt; (0.5M images, 10k individuals)&lt;/li&gt;
&lt;li&gt;90% of database it used for training, 10% for validation&lt;/li&gt;
&lt;li&gt;while testing, only single features will be extracted from sinlge image( so there will be nothing like &lt;a href="https://github.com/happynear/NormFace/blob/master/MirrorFace.md"&gt;mirror-trick&lt;/a&gt;)&lt;/li&gt;
&lt;li&gt;only one instance of model will be used (so there will be no feature merging from multiple model)&lt;/li&gt;
&lt;li&gt;start Learning Rate will be chosen from set: &lt;code&gt;0.1, 0.04, 0.01, 0.001&lt;/code&gt;.&lt;/li&gt;
&lt;li&gt;for reducing the LR, the detection of &lt;code&gt;Plateau&lt;/code&gt; will be used&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Initial assumptions:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;architectures will be using CASIA database align using &lt;a href="https://kpzhang93.github.io/papers/spl.pdf"&gt;MTCNN&lt;/a&gt; algorithm&lt;/li&gt;
&lt;li&gt;basic Data Augmentation technique will be mirror&lt;/li&gt;
&lt;/ul&gt;
 &lt;p align="center"&gt;
&lt;img alt="Demystifying Face Recognition I: Introduction" src="http://localhost:2368/content/images/2017/11/sprite_image_69_w_111_h_130.png"&gt;
&lt;/p&gt;
&lt;p&gt;The size of the database as well as the input images has been selected so as to enable high quality methods, while reducing the time it takes. The number of experiments needed to achieve the final result is enormous, and the computational power is limited.&lt;/p&gt;
&lt;p&gt;As a primary determinant of method quality, two results will be considered:&lt;br&gt;
LFW, LFW-BLUFR (both of them share features from same images). Additionally for best models the more complicated tests will be conducted: on IARPA Janus Benchmark-A and MegaFace. The &lt;code&gt;template&lt;/code&gt; at IJB-A will be created by taking the mean value.&lt;/p&gt;
&lt;p&gt;Each of the experiments will be compared to &lt;strong&gt;baseline&lt;/strong&gt;, the selected method (data-&amp;gt; architecture-&amp;gt; loss), which achieved its result using quite simple methods. This will allow us to evaluate whether the new proposed technology affects the quality of the algorithm positively. However, such an approach is not perfect and sometimes it may happen that the combination of several techniques only reflects the real impact of each. Unfortunately, such results can be missed. So when all the experiments will be done, the large-scale experiment will be conducted (DA or different loss with different scales) to get the best possible result. But earlier we want to sift through these techniques (ex. loss functions, which dozens have been proposed recently), which do not affect the final result to a large extent. In addition, we would like to test our own ideas and see if they make sense.&lt;/p&gt;
&lt;p&gt;The posts of each type of experiment will be in the form of a report that will reveal and analyze the results. The length of each post will depend on the subject and the number of experiments needed to confirm or refute the thesis. We expect that, for example, for the purpose of loss functions there will be about 4-5 posts.&lt;/p&gt;
&lt;p&gt;&lt;img src="http://localhost:2368/content/images/2017/11/Face-Recognition-Pipeline---Page-1-.png" alt="Demystifying Face Recognition I: Introduction"&gt;&lt;br&gt;
We will start experiements from the begginig of all process, like in above picture. First post will be mainly about data and it preparation. Then we will take first try to get better accuracy by using more Data Augumentation technique. Next will be introducing some additional small changes in network architectures in idea of increasing capasity. After that we will examine many loss function, mainly based on single image (and maybe with pair and triple of image). After that we will be again ready for choosing the best architecture for our purpose, with all the knowledge gathered earlier. We hope to get better results than state-of-the-art.&lt;/p&gt;
&lt;p&gt;It's enough in the introduction, we hope everything is clear. In the next post we will look at the creation of &lt;strong&gt;baseline&lt;/strong&gt;, a reference to further experiments.&lt;/p&gt;
&lt;p&gt;References&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="http://vis-www.cs.umass.edu/lfw/lfw_update.pdf"&gt;Labeled Faces in the Wild: Updates and New Reporting Procedures&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="http://www.cbsr.ia.ac.cn/users/scliao/papers/Liao-IJCB14-BLUFR.pdf"&gt;A Benchmark Study of Large-scale Unconstrained Face Recognition&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://pdfs.semanticscholar.org/140c/95e53c619eac594d70f6369f518adfea12ef.pdf"&gt;Pushing the Frontiers of Unconstrained Face Detection and Recognition: IARPA Janus Benchmark A&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="http://biometrics.cse.msu.edu/Publications/Face/Whitelametal_IARPAJanusBenchmark-BFaceDataset_CVPRW17.pdf"&gt;IARPA Janus Benchmark-B Face Dataset&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="http://megaface.cs.washington.edu/KemelmacherMegaFaceCVPR16.pdf"&gt;The MegaFace Benchmark: 1 Million Faces for Recognition at Scale&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="http://openaccess.thecvf.com/content_cvpr_2017/supplemental/Nech_Level_Playing_Field_2017_CVPR_supplemental.pdf"&gt;Level Playing Field for Million Scale Face Recognition&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://arxiv.org/pdf/1511.02683.pdf"&gt;A Light CNN for Deep Face Representation with Noisy Labels&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.nist.gov/sites/default/files/documents/2017/08/25/frvt_report_2017_08_25.pdf"&gt;Ongoing Face Recognition Vendor Test (FRVT) Part 1: Verification&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://ydwen.github.io/papers/WenCVPR17.pdf"&gt;SphereFace: Deep Hypersphere Embedding for Face Recognition&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://kpzhang93.github.io/papers/spl.pdf"&gt;Joint Face Detection and Alignment using Multi-task Cascaded Convolutional Networks&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;</content:encoded></item></channel></rss>